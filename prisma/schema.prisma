generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Mesa {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  nombre String
  invitados  Invitados[]   // Relación nombrada
  invitacion Invitacion @relation(fields: [invitacionId], references: [id])
  invitacionId String @db.ObjectId
  numeroMesa String
  invitadosJSON String 
}

model User {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  name String
  evento String
  password String
  rol String
  nombreWhats String?
  invitacion Invitacion? @relation(fields: [invitacionId], references: [id])
  invitacionId String? @unique @db.ObjectId
}

model Invitacion {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  link String
  invitationName String
  user User?
  userId String @db.ObjectId
  invitados Invitados[]
  mesas Mesa[] // Relación con el modelo Mesa
  invitacionEnviadaConWhatsApp  InvitacionEnviadaConWhatsApp[]
}

model Invitados {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  nombre String
  pasesAsignados Int
  tel String
  pasesConfirmados Int
  invitacionId String @db.ObjectId
  invitacion Invitacion @relation(fields: [invitacionId], references: [id])
  mesa Mesa? @relation(fields: [mesaId], references: [id]) // Relación inversa nombrada
  mesaId String? @db.ObjectId
}

model InvitacionEnviadaConWhatsApp {
  id String @id @default(auto()) @map("_id") @db.ObjectId
  nombre String
  tel String
  invitacion Invitacion @relation(fields: [invitacionId], references: [id])
  invitacionId String @db.ObjectId
}
